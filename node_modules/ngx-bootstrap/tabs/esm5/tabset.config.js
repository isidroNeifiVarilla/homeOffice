/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as ɵngcc0 from '@angular/core';
var TabsetConfig = /** @class */ (function () {
    function TabsetConfig() {
        /**
         * provides default navigation context class: 'tabs' or 'pills'
         */
        this.type = 'tabs';
        /**
         * provides possibility to set keyNavigations enable or disable, by default is enable
         */
        this.isKeysAllowed = true;
        /**
         * aria label for tab list
         */
        this.ariaLabel = 'Tabs';
    }
    /** @nocollapse */ TabsetConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function TabsetConfig_Factory() { return new TabsetConfig(); }, token: TabsetConfig, providedIn: "root" });
TabsetConfig.ɵfac = function TabsetConfig_Factory(t) { return new (t || TabsetConfig)(); };
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabsetConfig, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return []; }, null); })();
    return TabsetConfig;
}());
export { TabsetConfig };
if (false) {
    /**
     * provides default navigation context class: 'tabs' or 'pills'
     * @type {?}
     */
    TabsetConfig.prototype.type;
    /**
     * provides possibility to set keyNavigations enable or disable, by default is enable
     * @type {?}
     */
    TabsetConfig.prototype.isKeysAllowed;
    /**
     * aria label for tab list
     * @type {?}
     */
    TabsetConfig.prototype.ariaLabel;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFic2V0LmNvbmZpZy5qcyIsInNvdXJjZXMiOlsibmc6L25neC1ib290c3RyYXAvdGFicy90YWJzZXQuY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDOztBQUNBO0FBR1UsSUFIVjtBQUNZO0FBRVo7QUFDNEM7QUFBWSxRQUN0RCxTQUFJLEdBQUcsTUFBTSxDQUFDO0FBQ2hCO0FBQVk7QUFDRTtBQUNaLFFBREEsa0JBQWEsR0FBRyxJQUFJLENBQUM7QUFDdkI7QUFBWTtBQUNFO0FBRVosUUFGQSxjQUFTLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLEtBQUMsQUFQUTtnREFIUixVQUFVLFNBQUMsc0JBQ1YsVUFBVSxFQUFFLE1BQU0sa0JBQ25CLDdIQUNTOzs7Ozs7O2dEQUdxRTtBQUFDLHVCQVJoRjtBQUFFLENBWUQsQUFWRCxJQVVDO0FBQ0QsU0FSYSxZQUFZO0FBQ3hCO0FBQWE7QUFBUTtBQUVuQjtBQUFpQjtBQUFRLElBRDFCLDRCQUFjO0FBQ2hCO0FBQVE7QUFDRjtBQUFpQjtBQUNoQixJQURMLHFDQUFxQjtBQUN2QjtBQUFRO0FBQ0Y7QUFDTDtBQUNNLElBRkwsaUNBQW1COztBQVhBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFWQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBSkEsQUFZQSxBQVZBLEFBVUEsQUFQQSxBQUFBLEFBRUEsQUFBQSxBQUVBLEFBQUEsQUFFQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ASW5qZWN0YWJsZSh7XG4gIHByb3ZpZGVkSW46ICdyb290J1xufSlcbmV4cG9ydCBjbGFzcyBUYWJzZXRDb25maWcge1xuICAvKiogcHJvdmlkZXMgZGVmYXVsdCBuYXZpZ2F0aW9uIGNvbnRleHQgY2xhc3M6ICd0YWJzJyBvciAncGlsbHMnICovXG4gIHR5cGUgPSAndGFicyc7XG4gIC8qKiBwcm92aWRlcyBwb3NzaWJpbGl0eSB0byBzZXQga2V5TmF2aWdhdGlvbnMgZW5hYmxlIG9yIGRpc2FibGUsIGJ5IGRlZmF1bHQgaXMgZW5hYmxlICovXG4gIGlzS2V5c0FsbG93ZWQgPSB0cnVlO1xuICAvKiogYXJpYSBsYWJlbCBmb3IgdGFiIGxpc3QgKi9cbiAgYXJpYUxhYmVsID0gJ1RhYnMnO1xufVxuIl19