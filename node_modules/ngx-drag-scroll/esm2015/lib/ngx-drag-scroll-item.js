import { Directive, ElementRef, Input, HostBinding, Inject } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class DragScrollItemDirective {
    constructor(elementRef) {
        this.display = 'inline-block';
        this._dragDisabled = false;
        this._elementRef = elementRef;
    }
    get dragDisabled() { return this._dragDisabled; }
    set dragDisabled(value) { this._dragDisabled = value; }
}
DragScrollItemDirective.ɵfac = function DragScrollItemDirective_Factory(t) { return new (t || DragScrollItemDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef)); };
DragScrollItemDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DragScrollItemDirective, selectors: [["", "drag-scroll-item", ""]], hostVars: 2, hostBindings: function DragScrollItemDirective_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵstyleProp("display", ctx.display);
    } }, inputs: { dragDisabled: ["drag-disabled", "dragDisabled"] } });
DragScrollItemDirective.ctorParameters = () => [
    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] }
];
DragScrollItemDirective.propDecorators = {
    display: [{ type: HostBinding, args: ['style.display',] }],
    dragDisabled: [{ type: Input, args: ['drag-disabled',] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DragScrollItemDirective, [{
        type: Directive,
        args: [{
                selector: '[drag-scroll-item]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef, decorators: [{
                type: Inject,
                args: [ElementRef]
            }] }]; }, { display: [{
            type: HostBinding,
            args: ['style.display']
        }], dragDisabled: [{
            type: Input,
            args: ['drag-disabled']
        }] }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWRyYWctc2Nyb2xsLWl0ZW0uanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1kcmFnLXNjcm9sbC9zcmMvbGliL25neC1kcmFnLXNjcm9sbC1pdGVtLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUtsRixNQUFNLE9BQU8sdUJBQXVCO0FBQ3BDLElBV0UsWUFDc0IsVUFBc0I7QUFDNUMsUUFaQSxZQUFPLEdBQUcsY0FBYyxDQUFDO0FBQzNCLFFBS0Usa0JBQWEsR0FBRyxLQUFLLENBQUM7QUFDeEIsUUFNSSxJQUFJLENBQUMsV0FBVyxHQUFHLFVBQVUsQ0FBQztBQUNsQyxJQUFFLENBQUM7QUFDSCxJQWJFLElBQ0ksWUFBWSxLQUFLLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7QUFDbkQsSUFBRSxJQUFJLFlBQVksQ0FBQyxLQUFjLElBQUksSUFBSSxDQUFDLGFBQWEsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDO0FBQ2xFO21EQVZDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsb0JBQW9CLGNBQy9COzs7d0VBQ0k7QUFBQztBQUNVLFlBTkksVUFBVSx1QkFrQnpCLE1BQU0sU0FBQyxVQUFVO0FBQVE7QUFBRztBQUVYLHNCQWRuQixXQUFXLFNBQUMsZUFBZTtBQUN6QiwyQkFFRixLQUFLLFNBQUMsZUFBZTtBQUNwQjs7Ozs7Ozs7Ozs7Ozs7OztBQVZBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFZQSxBQUNBLEFBQUEsQUFYQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBTUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQU9BLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQVpBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBVEEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUpBLEFBQUEsQUFrQkEsQUFBQSxBQUFBLEFBQUEsQUFaQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCwgSG9zdEJpbmRpbmcsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbZHJhZy1zY3JvbGwtaXRlbV0nXG59KVxuZXhwb3J0IGNsYXNzIERyYWdTY3JvbGxJdGVtRGlyZWN0aXZlIHtcbiAgQEhvc3RCaW5kaW5nKCdzdHlsZS5kaXNwbGF5JylcbiAgZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xuXG4gIEBJbnB1dCgnZHJhZy1kaXNhYmxlZCcpXG4gIGdldCBkcmFnRGlzYWJsZWQoKSB7IHJldHVybiB0aGlzLl9kcmFnRGlzYWJsZWQ7IH1cbiAgc2V0IGRyYWdEaXNhYmxlZCh2YWx1ZTogYm9vbGVhbikgeyB0aGlzLl9kcmFnRGlzYWJsZWQgPSB2YWx1ZTsgfVxuXG4gIF9kcmFnRGlzYWJsZWQgPSBmYWxzZTtcblxuICBfZWxlbWVudFJlZjogRWxlbWVudFJlZjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBASW5qZWN0KEVsZW1lbnRSZWYpIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXG4gICkge1xuICAgIHRoaXMuX2VsZW1lbnRSZWYgPSBlbGVtZW50UmVmO1xuICB9XG59XG4iXX0=